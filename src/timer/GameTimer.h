//// /////////////////////////////////////////////////////////////////
//// @file GameTimer.h
//// @author lazyfoo (adapted and cleaned up by PJ O Halloran).
//// @date 07/12/2009
////
//// File contains the header for the GameTimer class.  This uses the
//// SDL api to get the current time from the underlying OS.
////
//// /////////////////////////////////////////////////////////////////
//
//#ifndef __GAME_TIMER_H
//#define __GAME_TIMER_H
//
//// External Headers
//#include <SDL/SDL.h>
//
//// Project Headers
//#include "CommonTimer.h"
//
//namespace GameHalloran
//{
//	// /////////////////////////////////////////////////////////////////
//	// @class GameTimer
//	// @author PJ O Halloran
//	//
//	// This class has methods for stopping, starting and querying a timer
//	// using the SDL library.
//	//
//	// /////////////////////////////////////////////////////////////////
//	class GameTimer : public CommonTimer
//	{
//	private:
//
//		// /////////////////////////////////////////////////////////////////
//		// Get the current tick count from the underlying OS in a platform 
//		// specific way.
//		//
//		// /////////////////////////////////////////////////////////////////
//		virtual F64 VGetTicks()
//		{
//			return (static_cast<F64>(SDL_GetTicks()));	
//		};
//
//	public:
//	
//		// /////////////////////////////////////////////////////////////////
//		// Default constructor.
//		// 
//		// Initializes the timer.
//		//
//		// /////////////////////////////////////////////////////////////////
//		GameTimer() : CommonTimer() { };
//		
//		// /////////////////////////////////////////////////////////////////
//		// Destructor.
//		//
//		// /////////////////////////////////////////////////////////////////
//		virtual ~GameTimer() { };
//			
//	};
//}
//
//#endif
