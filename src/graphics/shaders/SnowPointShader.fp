// /////////////////////////////////////////////////////////////////
// @file SnowPointShader.fp
// @author PJ O Halloran
//
// This shader is used to create the snow particle effect.
//
// The shader calculates the color of the fragment based on the
// color passed in plus the texture coordinate passed in.
//
// /////////////////////////////////////////////////////////////////

// Use GL shader version 3.3
#version 330

// /////////////////////////////////////////////////////////////////
// ******************* Input parameters ****************************
// /////////////////////////////////////////////////////////////////
smooth in vec4 vertexVaryColor;		// Color interpolated.
// /////////////////////////////////////////////////////////////////


// /////////////////////////////////////////////////////////////////
// ******************* Uniform/Batch constants *********************
// /////////////////////////////////////////////////////////////////
uniform sampler2D pointImage;		// Access to the 2D texture.
// /////////////////////////////////////////////////////////////////


// /////////////////////////////////////////////////////////////////
// ******************* Output parameters ***************************
// /////////////////////////////////////////////////////////////////
out vec4 fragmentColor;			// The final fragment color.
// /////////////////////////////////////////////////////////////////


// /////////////////////////////////////////////////////////////////
// Main entry point of shader program.
//
// /////////////////////////////////////////////////////////////////
void main(void)
{
	vec2 p = gl_PointCoord * 2.0f - vec2(1.0);
	if(dot(p, p) > 1.0f)
		discard;
    fragmentColor = texture(pointImage, gl_PointCoord) * vertexVaryColor;
}
