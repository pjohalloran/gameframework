// /////////////////////////////////////////////////////////////////
// @file EnvironmentBox.fp
// @author PJ O Halloran & Richard S. Wright Jr.
//
// This shader is used to render a texture on the inside surfaces of
// a cube.
//
// This shader is based on the SkyBox example in the OpenGL Superbible
// 5th edition, Chapter 7 - Advanced Textures.
//
// /////////////////////////////////////////////////////////////////

// Use GL shader version 3.2
#version 150

// /////////////////////////////////////////////////////////////////
// ******************* Input parameters ****************************
// /////////////////////////////////////////////////////////////////
varying vec3 varyTexCoord;		// Texture coordinate to fragment program.
// /////////////////////////////////////////////////////////////////


// /////////////////////////////////////////////////////////////////
// ******************* Uniform/Batch constants *********************
// /////////////////////////////////////////////////////////////////
uniform samplerCube cubeMap;	// CubeMap sampler.
// /////////////////////////////////////////////////////////////////


// /////////////////////////////////////////////////////////////////
// ******************* Output parameters ***************************
// /////////////////////////////////////////////////////////////////
out vec4 fragmentColor;			// The final fragment color.
// /////////////////////////////////////////////////////////////////


// /////////////////////////////////////////////////////////////////
// Main entry point of shader program.
//
// /////////////////////////////////////////////////////////////////
void main(void)
{
	// Make the fragement color the value of the cubemap texture sampled
	//  using an interpolated vector (from the vertex program).
	fragmentColor = texture(cubeMap, varyTexCoord);
}
