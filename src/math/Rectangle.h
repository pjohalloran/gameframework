// /////////////////////////////////////////////////////////////////
// @file Rectangle.h
// @author PJ O Halloran
// @date 16/12/2009
//
// File contains the header for the Rectangle class.
//
// /////////////////////////////////////////////////////////////////

#ifndef __RECTANGLE_H
#define __RECTANGLE_H

// External Headers

// Project Headers
#include "Point.h"

namespace GameHalloran
{
	// /////////////////////////////////////////////////////////////////
	// @class Rectangle
	// @author PJ O Halloran
	//
	// This class represents a 2D rectangle.
	//
	// /////////////////////////////////////////////////////////////////
	class Rectangle
	{
		private:
		
			Point m_tl;						///< The point of the top left of the rectangle.
			Point m_br;						///< The point of the bottom right of the rectangle.
		
		public:
		
			// /////////////////////////////////////////////////////////////////
			// Default constructor.
			// 
			// Top Left = (0, 1), Bottom Right = (1, 0).
			//
			// /////////////////////////////////////////////////////////////////
			Rectangle();
			
			// /////////////////////////////////////////////////////////////////
			// Custom constructor.
			// 
			// Initializes the Rectangle with the positions supplied.
			//
			// @param topLeft The top left position of the rectangle.
			// @param bottomRight The bottom right position of the rectangle.
			//
			// /////////////////////////////////////////////////////////////////
			Rectangle(const Point &topLeft, const Point &bottomRight);

			// /////////////////////////////////////////////////////////////////
			// Custom constructor.
			// 
			// Initializes the Rectangle with the positions supplied.
			//
			// @param top The y coordinate of the top of the rectangle.
			// @param bottom The y coordinate of the bottom of the rectangle.
			// @param left The x coodinate of the left of the rectangle.
			// @param right The x coordinate of the right of the rectangle.
			//
			// /////////////////////////////////////////////////////////////////
			Rectangle(const I32 top, const I32 bottom, const I32 left, const I32 right);
			
			// /////////////////////////////////////////////////////////////////
			// Copy constructor.
			// 
			// Initializes the Rectangle with the Rectangle supplied.
			//
			// @param const Rectangle& The Rectanlge to copy onto this one.
			//
			// /////////////////////////////////////////////////////////////////
			Rectangle(const Rectangle &recRef);
			
			// /////////////////////////////////////////////////////////////////
			// Destructor.
			//
			// /////////////////////////////////////////////////////////////////
			~Rectangle();

			// /////////////////////////////////////////////////////////////////
			// Set the position of the top left corner of the rectangle.
			//
			// @param tlRef The new top left position.
			//
			// /////////////////////////////////////////////////////////////////
			void SetTopLeft(const Point &tlRef);

			// /////////////////////////////////////////////////////////////////
			// Get the position of the top left corner of the rectangle.
			//
			// /////////////////////////////////////////////////////////////////
			const Point GetTopLeft() const;
			
			// /////////////////////////////////////////////////////////////////
			// Set the position of the bottom right corner of the rectangle.
			//
			// @param brRef The new bottom right position.
			//
			// /////////////////////////////////////////////////////////////////
			void SetBottomRight(const Point &brRef);

			// /////////////////////////////////////////////////////////////////
			// Get the position of the bottom right corner of the rectangle.
			//
			// /////////////////////////////////////////////////////////////////
			const Point GetBottomRight() const;
			
			// /////////////////////////////////////////////////////////////////
			// Get the y coordinate of the top of the rectangle.
			//
			// /////////////////////////////////////////////////////////////////
			const I32 GetTop() const;

			// /////////////////////////////////////////////////////////////////
			// Get the y coordinate of the bottom of the rectangle.
			//
			// /////////////////////////////////////////////////////////////////
			const I32 GetBottom() const;

			// /////////////////////////////////////////////////////////////////
			// Get the x coordinate of the left of the rectangle.
			//
			// /////////////////////////////////////////////////////////////////
			const I32 GetLeft() const;

			// /////////////////////////////////////////////////////////////////
			// Get the x coordinate of the right of the rectangle.
			//
			// /////////////////////////////////////////////////////////////////
			const I32 GetRight() const;

			// /////////////////////////////////////////////////////////////////
			// Get the width of the rectangle.
			//
			// /////////////////////////////////////////////////////////////////
			const U32 GetWidth() const;

			// /////////////////////////////////////////////////////////////////
			// Get the height of the rectangle.
			//
			// /////////////////////////////////////////////////////////////////
			const U32 GetHeight() const;

			// /////////////////////////////////////////////////////////////////
			// Get the area of the rectangle.
			//
			// /////////////////////////////////////////////////////////////////
			const U32 GetArea() const;

			// /////////////////////////////////////////////////////////////////
			// Check if the rectangle satisfies the conditions of being a square
			// i.e. if its sides are all equal length.
			//
			// @return bool True if it is square and false if not.
			//
			// /////////////////////////////////////////////////////////////////
			bool IsSquare() const;

			// /////////////////////////////////////////////////////////////////
			// Set the rectangle equal to the Rectangle supplied.
			//
			// /////////////////////////////////////////////////////////////////
			void operator=(const Rectangle &recRef);
			
			// /////////////////////////////////////////////////////////////////
			// Check if this rectangle is equivalent to the rectangle supplied.
			//
			// @return True if the point is equivalent and false otherwise.
			//
			// /////////////////////////////////////////////////////////////////
			bool operator==(const Rectangle &recRef);
			
			// /////////////////////////////////////////////////////////////////
			// Check if this rectangle is less than to the rectangle supplied.
			//
			// @return True if the point is less than and false otherwise.
			//
			// /////////////////////////////////////////////////////////////////
			bool operator<(const Rectangle &recRef);

			// /////////////////////////////////////////////////////////////////
			// Check if the point supplied lies within the bounds of the
			// rectangle.
			//
			// @param const Point& The point to check.
			//
			// /////////////////////////////////////////////////////////////////
			bool IsPointInside(const Point &pointRef) const;

			// /////////////////////////////////////////////////////////////////
			// Get the centre of the rectangle.
			//
			// (This is subject to inaccuracy due to Points using ints as their
			// x and y value).
			//
			// @return const Point The centre point of the rectangle.
			//
			// /////////////////////////////////////////////////////////////////
			const Point GetCentre() const;
			
	};
}

#endif
